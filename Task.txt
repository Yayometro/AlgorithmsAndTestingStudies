

2. Factorial Recursivo
Problema: Escribe una función recursiva que calcule el factorial de un número dado.
Ejemplo:
Input: n = 5
Output: 120
Descripción: 5! = 5 * 4 * 3 * 2 * 1 = 120. Debes implementar la función usando recursión.


3.  Ordenamiento con Bubble Sort

Problema: Implementa el algoritmo de Bubble Sort para ordenar un array de enteros en orden ascendente.
Input: nums = [5, 1, 4, 2, 8]
Output: [1, 2, 4, 5, 8]
Descripción: Ordena el array de menor a mayor utilizando el algoritmo Bubble Sort.


Ejercicios de Nivel Medio:
1. Buscar Pares con HashMap (Caching)
Problema: Dado un array de enteros y un entero k, encuentra todos los pares únicos en el array cuya diferencia sea igual a k. Utiliza un HashMap para resolverlo.
Ejemplo:
Input: nums = [1, 7, 5, 9, 2, 12, 3], k = 2
Output: [[1, 3], [3, 5], [5, 7], [7, 9]]
Descripción: Devuelve una lista de pares cuya diferencia es igual a k.

2. Potencia de un Número con Recursión
Problema: Implementa una función recursiva para calcular x^n (x elevado a la potencia de n). Optimiza la recursión para reducir la complejidad.
Ejemplo:
Input: x = 2, n = 10
Output: 1024
Descripción: La función debe calcular 2^10 = 1024 de manera eficiente usando recursión.

Ordenamiento con Merge Sort
Problema: Implementa el algoritmo de Merge Sort para ordenar un array de enteros en orden ascendente.
Ejemplo:
Input: nums = [38, 27, 43, 3, 9, 82, 10]
Output: [3, 9, 10, 27, 38, 43, 82]
Descripción: Ordena el array de menor a mayor utilizando el algoritmo Merge Sort.